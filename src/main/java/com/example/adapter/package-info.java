/**
 * adapter模式(包说明类)
 * 1、定义：
 *  将一个类的接口转换成客户希望的另外一个接口。
 *  适配器模式使得原本由于接口不兼容而不能一起工作的那些类可以一起工作。
 *
 *  2、角色
 *  目标(Target)角色：这就是所期待得到的接口，也就是这类的接口是符合我们要求的。
 *  源(Adapee)角色：我们要使用的接口，但是这个接口不符合我们的要求，也就是现在需要适配的接口。
 *  适配器(Adaper)角色：适配器类是适配器模式的核心。适配器把源接口转换成目标接口。显然，这一角色不可以是接口，而必须是具体类。
 *
 *  3、分类
 *    ① 类 适配器模式{@link com.example.adapter.ClassAdapter}
 *    ② 对象 适配器模式{@link com.example.adapter.ObjectAdapter}
 *    ①和②区别：对象的适配器模式不是使用继承关系连接到Adaptee类，而是使用委派关系连接到Adaptee类。
 *
 *  优点：
 *     复用性
 *        系统需要使用现有的类，而此类的接口不符合系统的需要。那么通过适配器模式就可以让这些功能得到更好的复用。
 *     扩展性
 *        在实现适配器功能的时候，可以自由调用自己开发的功能，从而自然地扩展系统的功能。
 *  缺点：
 *    过多的使用适配器，会让系统非常零乱，不易整体进行把握。比如，明明看到调用的是A接口，其实内部被适配成了B接口的实现。所以适配器模式不适合在详细设计阶段使用它，它是一种补偿模式，专用来在系统后期扩展、修改时所用。
 *
 *  适用场景：
 *  1、已经存在的类的接口不符合我们的需求；
 *  2、创建一个可以复用的类，使得该类可以与其他不相关的类或不可预见的类协同工作；
 *  3、使用一些已经存在的子类而不需要对其进行子类化来匹配接口。
 *  4、旧的系统开发的类已经实现了一些功能，但是客户端却只能以另外接口的形式访问，但我们不希望手动更改原有类的时候。
 *
 * 参考引用：
 * https://mp.weixin.qq.com/s?__biz=MzI4Njc5NjM1NQ==&mid=2247483839&idx=1&sn=68787de393fe59d7b1d09a85595a17d7&scene=19#wechat_redirect
 */
package com.example.adapter;